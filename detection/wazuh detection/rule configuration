#################################################
   mmm  m    m   mm  m     m  mmmm m     m  mmmm 
 m"   " #    #   ##   "m m"  m"  "m "m m"  m"  "m
 #   mm #    #  #  #   "#"   #    #  "#"   #    #
 #    # #    #  #mm#    #    #    #   #    #    #
  "mmm" "mmmm" #    #   #     #mm#    #     #mm# 
###################- Blue Team -#################

## Blue Team - Guayoyo
## blueteam@guayoyo.io
## 06/04/2022

Si bien sabemos que hay varias formas de llegar a la explotacion utulizando distintos metodos, esta seria la primera version de la regla para detectar los patrones que enumeramos a continuacion:

      $1 = "request.getParameter(\"pwd\")" ascii
      $2 = "excuteCmd(request.getParameter(" ascii
      $3 = "getRuntime().exec (request.getParameter(" ascii
      $4 = "private static final String PW = \"whoami\"" ascii
      $5 = "java.io.InputStream%20in%20%3D%20%25%7Bc1%7Di"
      $6 = "?pwd=j&cmd=whoami"
      $7 = ".getParameter(%22pwd%22)"
      $8 = "class.module.classLoader.resources.context.parent.pipeline.first.pattern=%25%7B"
      $9 = ".getInputStream(); int a = -1; byte[] b = new byte[2048];"
      $10 = "if(\"j\".equals(request.getParameter(\"pwd\")"
      $11 = ".getRuntime().exec(request.getParameter(\"cmd\")).getInputStream();"
      
La regla detecta la intencion maliciosa al recibir una peticion web con los patrones anteriores y mediante expresiones regulares logramos generar una alerta.

Ubicacion de regla: /var/ossec/etc/rules/local_rules.xml

 <rule id="100009" level="8">
   <if_sid>31100, 31108</if_sid>
   <regex>request\pgetParameter\(\\\ppwd\\\p\)|excuteCmd\(request\pgetParameter\(|getRuntime\(\)\pexec\p20\(request\pgetParameter\(|private\p20static\p20final\p20String\p20PW\p20\p\p20\\\pwhoami\\\p|java\pio\pInputStream\p20in\p20\p3D\p20\p25\p7Bc1\p7Di|\ppwd\pj\pcmd\pwhoami|\pgetParameter\(\p22pwd\p22\)|class\pmodule\pclassLoader\presources\pcontext\pparent\ppipeline\pfirst\ppattern\p\p25\p7B|\pgetInputStream\(\)\p%20int%20a%20\p%20\p1\p%20byte\p\p%20b%20\p%20new%20byte\p2048\p\p|if\(\\\pj\\\p\pequals\(request\pgetParameter\(\\\ppwd\\\p\)|\pgetRuntime\(\)\pexec\(request\pgetParameter\(\\\pcmd\\\p\)\)\pgetInputStream\(\)\p</regex>
   <description>Spring4Shell - Detects JSP webshells</description>
 </rule>
 
 Estamos trabajando en realizar una configuracion de Wazuh para mediante el FIM, detectar la shell utilizada en el ataque dentro del sistema objetivo.
